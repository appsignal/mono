#!/usr/bin/env ruby
# frozen_string_literal: true

module MonoCheck
  def self.run(command)
    read, write = IO.pipe
    pid = spawn command,
      [:out, :err] => write,
      :chdir => __dir__
    Process.wait pid
    write.close
    read.read
  end
end

git_status = MonoCheck.run("git status -s")
if $?.success?
  unless git_status.empty?
    puts "ERROR: The mono repository has been modified locally. " \
      "You are using the `mono` executable which is only meant for " \
      "'production' use."
    puts "Please use the `mono-dev` executable if you want to use " \
      "uncommitted changes to _test_ mono itself."
    exit 1
  end

  current_branch = MonoCheck.run("git rev-parse --abbrev-ref HEAD").chomp
  unless current_branch == "main"
    puts "ERROR: The mono repository is not on the `main` branch. " \
      "Please switch to the main branch to ensure you're using a released " \
      "version."
    puts "Please use the `mono-dev` executable if you want to use " \
      "uncommitted changes to _test_ mono itself."
    exit 1
  end
end

$LOAD_PATH << File.expand_path(File.join(__dir__, "..", "lib"))

require "mono"
require "mono/cli"

Mono::Cli::Wrapper.new(ARGV).execute
